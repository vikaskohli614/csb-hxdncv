{"version":3,"sources":["user.png","Editable.js","CustomInputt.js","App.js","index.js"],"names":["_","require","Editable","props","_useState","useState","allowedTags","allowedAttributes","a","_useState2","_slicedToArray","sanitizeConf","_useState3","_useState4","html","setHtml","_useState5","_useState6","clickedOutside","setClickedOutside","_useState7","_useState8","italic","setItalic","_useState9","_useState10","bold","setBold","inputRef","useRef","bRef","iRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","value","e","isEmpty","current","el","contains","target","EditButton","cmd","arg","name","cn","toLowerCase","_jsx","ref","disabled","className","onClick","evt","preventDefault","execCommand","children","_jsxs","ContentEditable","tagName","onChange","onBlur","sanitizeHtml","onFocus","CustomInput","_ref","cancellor","parentId","edit","submit","handleCancel","undefined","text","setText","console","log","src","user","style","width","height","type","App","data","comment","setComment","count","map","i","replies","CommentSection","currentUser","userId","avatarUrl","commentsArray","signinUrl","signupUrl","customInput","CustomInputt","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7fa79f5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.76c0f8ca.png\";","import React, { useEffect, useState, useRef } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport sanitizeHtml from \"sanitize-html\";\nimport \"./styles.css\";\n\nimport user from \"./user.png\";\n\nvar _ = require(\"lodash\");\n\nconst Editable = (props) => {\n  const [sanitizeConf, setSanitizeConf] = useState({\n    allowedTags: [\"b\", \"i\", \"em\", \"strong\", \"a\", \"p\", \"h1\"],\n    allowedAttributes: { a: [\"href\"] }\n  });\n\n  const [html, setHtml] = useState(``);\n  const [clickedOutside, setClickedOutside] = useState(true);\n  const [italic, setItalic] = useState(false);\n  const [bold, setBold] = useState(false);\n  const inputRef = useRef();\n  const bRef = useRef();\n  const iRef = useRef();\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  });\n\n  useEffect(() => {\n    setHtml(props.value);\n    // setEditable(true);\n  }, []);\n\n  const handleClickInside = () => setClickedOutside(false);\n  const handleClickOutside = (e) => {\n    if (\n      _.isEmpty(inputRef.current.el.current) ||\n      _.isEmpty(bRef.current) ||\n      _.isEmpty(iRef.current)\n    ) {\n      return;\n    }\n\n    if (\n      !inputRef.current.el.current.contains(e.target) &&\n      !bRef.current.contains(e.target) &&\n      !iRef.current.contains(e.target)\n    ) {\n      setClickedOutside(true);\n    }\n  };\n\n  const sanitize = () => {\n    setHtml(sanitizeHtml(html, sanitizeConf));\n  };\n\n  const EditButton = (props) => {\n    let { cmd, arg, name } = props;\n\n    let cn = \"unselect\";\n    switch (name.toLowerCase()) {\n      case \"b\": {\n        cn = bold ? \"select\" : \"unselect\";\n        break;\n      }\n      case \"i\": {\n        cn = italic ? \"select\" : \"unselect\";\n        break;\n      }\n      default:\n        break;\n    }\n\n    return (\n      <button\n        ref={name.toLowerCase() === \"b\" ? bRef : iRef}\n        disabled={clickedOutside}\n        key={cmd}\n        className={cn}\n        onClick={(evt) => {\n          evt.preventDefault(); // Avoids loosing focus from the editable area\n          document.execCommand(cmd, false, arg); // Send the command to the browser\n\n          switch (name.toLowerCase()) {\n            case \"b\": {\n              setBold(!bold);\n              break;\n            }\n\n            case \"i\": {\n              setItalic(!italic);\n              break;\n            }\n\n            default:\n              break;\n          }\n        }}\n      >\n        {name || cmd}\n      </button>\n    );\n  };\n\n  return (\n    <div>\n      <ContentEditable\n        ref={inputRef}\n        className=\"editable\"\n        tagName=\"pre\"\n        html={props.value} // innerHTML of the editable div\n        disabled={false} // use true to disable edition\n        onChange={props.onChange} // handle innerHTML change\n        onBlur={sanitize}\n        onFocus={(evt) => {\n          setClickedOutside(false);\n        }}\n      />\n      <div>\n        <div>\n          <EditButton cmd=\"bold\" name=\"B\" />\n          <EditButton cmd=\"italic\" name=\"i\" />\n        </div>\n        {/* <div>\n          <button onClick={props.onCancel}>Cancel</button>\n          <button onClick={props.onPost}>Post</button>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Editable;\n","import React, { useState, useEffect } from \"react\";\nimport user from \"./user.png\";\nimport \"./custom.css\";\n\nimport Editable from \"./Editable\";\n\nconst CustomInput = ({\n  cancellor,\n  parentId,\n  value,\n  edit,\n  submit,\n  handleCancel\n}) => {\n  const [text, setText] = useState(value === undefined ? \"\" : value);\n\n  useEffect(() => {\n    console.log(\"console > \", value);\n  });\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    setText(e.target.value);\n  };\n  return (\n    <form>\n      <div className=\"form\">\n        <div className=\"row\">\n          {\" \"}\n          <img src={user} style={{ width: 80, height: 80 }} />\n          <div className=\"row\">\n            <div className=\"arrow-left\"></div>\n            <div className=\"input-div\">\n              <span className=\"input-name\">Riya Negi</span>\n              {/* <textarea\n                rows=\"2\"\n                className=\"input-box\"\n                type=\"text\"\n                placeholder=\"Type your reply here.\"\n                component=\"input\"\n                value={text}\n                onChange={handleChange}\n              ></textarea> */}\n\n              <Editable\n                value={text}\n                onChange={handleChange}\n                // onChange={(evt) => {\n                //   setTextEditable(evt.target.value);\n                // }}\n                // onCancel={(evt) => {\n                //   setTextEditable(\"\");\n                // }}\n                // onPost={(evt) => {\n                //   console.log(\"onPost >\", textEditable);\n                // }}\n                // parentId={props.parentId}\n                // cancellor={props.cancellor}\n                // value={props.value}\n                // edit={props.edit}\n                // submit={props.submit}\n                // handleCancel={props.handleCancel}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"btn-div\">\n          <button\n            className=\"post-btn\"\n            onClick={() => submit(cancellor, text, parentId, edit, setText)}\n            type=\"submit\"\n            disabled={!text}\n          >\n            Post\n          </button>\n          <button\n            className=\"cancel-btn\"\n            onClick={() => handleCancel(cancellor, edit)}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default CustomInput;\n","import \"./styles.css\";\n\nimport React, { useState, useEffect } from \"react\";\nimport data from \"./data.json\";\n\nimport { CommentSection } from \"react-comments-section\";\nimport \"react-comments-section/dist/index.css\";\n\nimport CustomInputt from \"./CustomInputt\";\nimport Editable from \"./Editable\";\n\nimport user from \"./user.png\";\n\nconst App = () => {\n  const [comment, setComment] = useState(data);\n  const userId = \"01a\";\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\";\n  const name = \"xyz\";\n  const signinUrl = \"/signin\";\n  const signupUrl = \"/signup\";\n  let count = 0;\n  comment.map((i) => {\n    count += 1;\n    i.replies && i.replies.map((i) => (count += 1));\n  });\n\n  const [textEditable, setTextEditable] = useState(\"\");\n\n  useEffect(() => {\n    console.log(comment);\n  }, [comment]);\n\n  const customInputFunc = (props) => {\n    return (\n      <CustomInputt\n        parentId={props.parentId}\n        cancellor={props.cancellor}\n        value={props.value}\n        edit={props.edit}\n        submit={props.submit}\n        handleCancel={props.handleCancel}\n      />\n    );\n  };\n\n  const editable = (props) => {\n    return (\n      // <div className=\"form\">\n      //   <div className=\"row\">\n      //     {\" \"}\n      //     <img src={user} style={{ width: 80, height: 80 }} />\n      //     <div className=\"row\">\n      //       <div className=\"arrow-left\"></div>\n      //       <div className=\"input-div\">\n      //         <span className=\"input-name\">Riya Negi</span>\n      //         <Editable\n      //           value={textEditable}\n      //           onChange={(evt) => {\n      //             setTextEditable(evt.target.value);\n      //           }}\n      //           onCancel={(evt) => {\n      //             setTextEditable(\"\");\n      //           }}\n      //           onPost={(evt) => {\n      //             console.log(\"onPost >\", textEditable);\n      //           }}\n      //           parentId={props.parentId}\n      //           cancellor={props.cancellor}\n      //           value={props.value}\n      //           edit={props.edit}\n      //           submit={props.submit}\n      //           handleCancel={props.handleCancel}\n      //         />\n      //       </div>\n      //     </div>\n      //   </div>\n      // </div>\n\n      <Editable\n        value={textEditable}\n        onChange={(evt) => {\n          setTextEditable(evt.target.value);\n        }}\n        onCancel={(evt) => {\n          setTextEditable(\"\");\n        }}\n        onPost={(evt) => {\n          console.log(\"onPost >\", textEditable);\n        }}\n      />\n    );\n  };\n\n  return (\n    <div className=\"cols\">\n      <div className=\"commentSection\">\n        {/* <div className=\"header\">{count} Comments (user logged in)</div>\n        <CommentSection\n          currentUser={\n            userId && { userId: userId, avatarUrl: avatarUrl, name: name }\n          }\n          commentsArray={comment}\n          setComment={setComment}\n          signinUrl={signinUrl}\n          signupUrl={signupUrl}\n        /> */}\n        <div className=\"header\">\n          {\" \"}\n          Custom Input Field component (user logged in)\n        </div>\n        <CommentSection\n          currentUser={\n            userId && { userId: userId, avatarUrl: avatarUrl, name: name }\n          }\n          commentsArray={comment}\n          setComment={setComment}\n          signinUrl={signinUrl}\n          signupUrl={signupUrl}\n          customInput={customInputFunc}\n        />\n      </div>\n      {/* <div class=\"verticalLine\"></div>\n      <div className=\"commentSection\">\n        <div className=\"header\">{count} Comments (user not logged in)</div>\n        <CommentSection\n          commentsArray={comment}\n          setComment={setComment}\n          signinUrl={signinUrl}\n          signupUrl={signupUrl}\n        />\n      </div> */}\n\n      {/* <div>\n        <CommentSection\n          currentUser={\n            userId && { userId: userId, avatarUrl: avatarUrl, name: name }\n          }\n          commentsArray={comment}\n          setComment={setComment}\n          signinUrl={signinUrl}\n          signupUrl={signupUrl}\n          customInput={editable}\n        />\n      </div> */}\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}